"""
1.计算机基础
    CPU
    内存
    磁盘
    操作系统
    应用系统
2.Python历史
    Guido van Rossum(吉多.范罗苏姆)
    仁慈的独裁者
3.Python环境
    编译型
        开发效率低，跨平台兼容性不好
        运行速度快
    解释型
        运行速度慢
        开发效率高，跨平台兼容性较好
    动态类型
    静态类型
    弱类型语言
    强类型语言
    Python动态的解释性强类型语言
4.Python发展

5.Python种类
    规范：只有一个
    解释器：
        CPython         C语言字节码
        IronPython      
        JyPython        Java语言字节码
        PyPy            Python语言字节码，一次性编译成Python字节码；运行速度快，开发效率相对较低
        其他语言的Python
    用统一的规范写一个Python脚本，交给不同的解释器，会翻译成对应解释器语言的字节码

    Python2默认编码方式ASCII，顶部加编码方式语句
    Python3默认编码方式UTF-8
6.变量
    变量：存放运算的中间结果，以便后续使用
    规则：
        以字母下划线开头，后续跟字母、下划线、数字
        不能使用关键字
    推荐方式：
        简洁易懂，有可描述性
        驼峰式命名
        下划线式命名 √(推荐)
    变量赋值：
        1.在内存创建对象，然后在系统表中创建变量名，然后创建一个由变量名指向内存对象的指针
        2.共享引用
7.常量
    python中没有常量，建议使用全大写的变量名表示常量，人为的不要修改
8.注释
    单行 #
    多行 三个单引号；三个双引号
9.基础数据类型
    数字类型    
        Number并不是一个对象类型而是一个对象类型的集合
        <class 'int'>
        <class 'float'>
        <class 'complex'>
        <class 'bool'>  // 可以独立出来作为布尔类型，本质上是数字类型内置的另一种表现形式
    字符串
        String(单引号、双引号生成相同的对象，功能相同)
        <class 'str'>
        三引号的字符串，完全按照定义的格式输出
        序列：拼接、重复、索引、分片、迭代、成员检测
    列表
    字典
    元组
    集合
    Python中没有类型声明，Python根据生成对象的表达式，自动确定对象类型(对象的类型标志位)并绑定操作集合
    通过type()函数确定类型
10.用户交互
    print()
    input()
        程序挂起，等待用户输入
        输入的数据都作为str类型存储
11.if(条件语句：条件为真时，执行下面缩进的语句块)
    格式：
        if 条件:
            结果
        elif 条件：
            结果
        else:
            结果
12.while
"""